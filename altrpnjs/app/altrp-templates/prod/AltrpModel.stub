"use strict";
var decorate = (this && this.decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var metadata = (this && this.metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const luxon = require("luxon");
const Orm = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const Database = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Database"));
const _ = __importStar(require("lodash"));
{{{imports}}}

class {{{classname}}} extends Orm.BaseModel {
  {{{constructor}}}

  static beforeSave(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.beforeSave", data: model})
  }

  static beforeCreate(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.beforeCreate", data: model})
  }

  static beforeUpdate(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.beforeUpdate", data: model})
  }

  static beforeDelete(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.beforeDelete", data: model})
  }

  static beforeFind(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.beforeFind", data: model})
  }

  static beforePaginate(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.beforePaginate", data: model})
  }

  static afterSave(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.afterSave", data: model})
  }

  static afterCreate(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.afterCreate", data: model})
  }

  static afterUpdate(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.afterUpdate", data: model})
  }

  static afterDelete(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.afterDelete", data: model})
  }

  static afterFind(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.afterFind", data: model})
  }

  static afterPaginate(model) {
    Event.default.emit("altrp_event",{type: "altrp_models.{{{classname}}}.afterPaginate", data: model})
  }

  {{{properties}}}
  {{{computed}}}
  {{{methods}}}
  // CUSTOM_START
  {{{custom}}}
  // CUSTOM_START
}

{{{staticProperties}}}

decorate([
  (0, Orm.beforeSave)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "beforeSave", null);

decorate([
  (0, Orm.beforeCreate)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "beforeCreate", null);

decorate([
  (0, Orm.beforeUpdate)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "beforeUpdate", null);

decorate([
  (0, Orm.beforeDelete)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "beforeDelete", null);

decorate([
  (0, Orm.beforeFind)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "beforeFind", null);

decorate([
  (0, Orm.beforePaginate)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "beforePaginate", null);

decorate([
  (0, Orm.afterSave)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "afterSave", null);

decorate([
  (0, Orm.afterCreate)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "afterCreate", null);

decorate([
  (0, Orm.afterUpdate)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "afterUpdate", null);

decorate([
  (0, Orm.afterDelete)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "afterDelete", null);

decorate([
  (0, Orm.afterFind)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "afterFind", null);

decorate([
  (0, Orm.afterPaginate)(),
  metadata("design:type", Function),
  metadata("design:paramtypes", [{{{classname}}}]),
], {{{classname}}}, "afterPaginate", null);

{{{columns}}}
{{{relations}}}

// CUSTOM_END
{{{custom_end}}}
// CUSTOM_END

exports.default = {{{classname}}};
